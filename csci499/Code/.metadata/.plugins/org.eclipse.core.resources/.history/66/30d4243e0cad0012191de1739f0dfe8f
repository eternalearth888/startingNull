package exercises;

public class BinarySearchTrees {

	public Node head;

	public BinarySearchTrees() {
		head = null;
	}

	// THIS SOLUTION IS NOT CORRECT
	// GO DOWN FURTHER IN THE TREE
	public static boolean isBST(Node root) {
		// Base Case
		if (root == null) {
			return true; // a BST with no nodes is still a BST
		} else if (root.left != null && root.right != null) {
			return false;
		} else if (root.left == null && root.right.data < root.data) {
				return false;
		} else if (root.right == null && root.left.data > root.data) {
				return false;
		} else if (root.left.data > root.data && root.right.data < root.data) {
			return false; // Since it is valid, check the subtrees
		}

		return isBST(root.left) && isBST(root.right); // If none of them apply
	}

}
