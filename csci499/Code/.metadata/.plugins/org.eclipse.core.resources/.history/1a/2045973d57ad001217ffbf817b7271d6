package gui;

import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.regex.Pattern;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.PlainDocument;

import game.Game;

public class ControlPanel extends JPanel {

	private Game play;

	private JTextField numTargetsBox;

	private JButton playButton;
	private JButton launchButton;
	private JButton resetButton;

	private JSlider powerSlider;
	private JSlider angleSlider;

	private JLabel numTargetsLabel;
	private JLabel powerBox;
	private JLabel angleBox;
	private JLabel timerLabel;

	public ControlPanel(Game g) {
		play = g;

		setLayout(new FlowLayout(FlowLayout.LEFT));

		// Setup Panel
		JPanel controls = new JPanel();
		controls.setLayout(new GridBagLayout());
		GridBagConstraints c = new GridBagConstraints();

		// Create Elements
		numTargetsLabel = new JLabel("Number of Pokemon ");
		numTargetsBox = new NumericTextField("5", 3);
		playButton = new JButton("Play");
		resetButton = new JButton("Reset");

		// Add Elements to Panel
		c.fill = GridBagConstraints.HORIZONTAL;
		c.gridx = 0;
		c.gridy = 0;
		controls.add(numTargetsLabel, c);

		c.gridx = 1;
		controls.add(numTargetsBox, c);

		c.insets = new Insets(10, 0, 0, 0);
		c.gridx = 0;
		c.gridy = 1;
		c.gridwidth = 2;
		c.ipady = 20;
		controls.add(playButton, c);

		c.gridx = 0;
		c.gridy = 2;
		c.gridwidth = 2;
		c.ipady = 0;
		c.insets = new Insets(0, 0, 0, 0);
		controls.add(resetButton, c);

		// Listeners to above elements
		playButton.addActionListener(new ControlButtonListener());
		resetButton.addActionListener(new ControlButtonListener());
		controls.setBorder(BorderFactory.createTitledBorder("SETUP"));
		add(controls);
		
		//	Create Sliders
		JPanel powerPanel = new JPanel();
		JPanel anglePanel = new JPanel();
		powerSlider = new JSlider(JSlider.HORIZONTAL,0,100,world.getLauncher().getPower());
		angleSlider = new JSlider(JSlider.HORIZONTAL,0,90,(int)world.getLauncher().getAngle());
		powerSlider.setMajorTickSpacing(20);
		powerSlider.setMinorTickSpacing(2);
		powerSlider.setPaintLabels(true);
		powerSlider.setPaintTicks(true);
		angleSlider.setMajorTickSpacing(15);
		angleSlider.setMinorTickSpacing(1);
		angleSlider.setPaintLabels(true);
		angleSlider.setPaintTicks(true);
		powerSlider.add(new JLabel("Power"));
		powerPanel.add(powerSlider);
		anglePanel.add(angleSlider);
		powerPanel.setBorder(BorderFactory.createTitledBorder("POWER"));
		anglePanel.setBorder(BorderFactory.createTitledBorder("ANGLE"));
		powerSlider.addChangeListener(new SliderChangeListener());
		angleSlider.addChangeListener(new SliderChangeListener());
		add(powerPanel);
		add(anglePanel);

		
	}

	class NumericTextField extends JTextField {

		public NumericTextField(String string, int i) {
			super(string, i);
		}

		@Override
		protected Document createDefaultModel() {
			return new NumericDocument();
		}

		private class NumericDocument extends PlainDocument {
			// The regular expression to match input against (zero or more
			// digits)
			private final Pattern DIGITS = Pattern.compile("\\d*");

			@Override
			public void insertString(int offs, String str, AttributeSet a)
					throws BadLocationException {
				// Only insert the text if it matches the regular expression
				if (str != null && DIGITS.matcher(str).matches())
					super.insertString(offs, str, a);
			}
		}
	}

	private class ControlButtonListener extends AbstractAction {
		@Override
		public void actionPerformed(ActionEvent e) {

			JButton source = (JButton) e.getSource();
			if (source == playButton) {
				String number = numTargetsBox.getText();
				try {
					int n = Integer.parseInt(number);
					if (n > 50 || n == 0) {
						throw (new NumberFormatException());
					}
					// play.createPokemon(n);
				} catch (NumberFormatException ex) {
					JOptionPane.showMessageDialog(null,
							"Error: Please enter a number between 1 and 50.",
							"Error", JOptionPane.ERROR_MESSAGE);
				}
			}
			// else if( source == resetButton ) {
			// play.Targets();
			// } else if( source == launchButton ) {
			// play.launch();
			// }
			// play.repaint();
			// }

		}

		private class SliderChangeListener implements ChangeListener {
			@Override
			public void stateChanged(ChangeEvent e) {
				JSlider source = (JSlider)e.getSource();
//				if( source == powerSlider ) {
//					play.getLauncher().setPower(source.getValue());
//					powerBox.setText(String.valueOf(source.getValue()));
//				} else if( source == angleSlider ) {
//					play.getLauncher().setAngle(source.getValue());
//					angleBox.setText(String.valueOf(source.getValue()));
//				}
//				play.repaint();
			}		
		}
		// Timer timer = new Timer(1000, new TimerListener());
		//
		// class TimerListener implements ActionListener {
		// int elapsedSeconds = 60;
		//
		// public void actionPerformed(ActionEvent evt) {
		// elapsedSeconds--;
		// timerLabel.setText(elapsedSeconds);
		//
		// if (elapsedSeconds == 0) {
		// timer.stop();
		// }
		//
		// }
		// }
	}
}
