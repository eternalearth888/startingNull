The Projectile class creates the projectile object in the game. It keeps track of the position of the projectile in the game, as well as it's x and y position. It also has booleans to check whether or not the projectile is flying, and if the projectile is done. It has a method to draw the projectile, a method to check that it has hit the Target, and it constantly updates position, velocity, flying and done.

The AnglePanel class create the panel in the game where the user can input their desired angle and the desired panel. It then updates accordingly.

The Slingshot class contains the position of the slingShot, checks as to whether or not the trajectory of the projectile is shown, and the velocity it will be releasing the Trajectory. It calcultes the angle and power of the trajectory, and updates as to whether or not it is holding the projectile or releasing it.  It also has a reset option to go back to it's initial position.  It updates accordingly.

The QuizPanel class creates the panel in the game where it presents a question to the player and allows them to answer. 

The ControlPanel class contains the option to start a new game, to exit the game or to launch the projectile. It then also contains a checkBox so that the user can choose to see whether or not they want to see the trajectory.  It calculates the launch and sets the angle as well. 

The Image class is the parent class to all image related classes in this project. It allows the images to show up in the game.

SunImage is a child class of Image. It calls the sun image that the game uses.

CastleImage is a child class of Image. It calls the castle image that the game uses.

SlingImage is a child class of Image. It calls the slingshot image that the game uses.

FireImage is a child class of Image. It calls the fire image that the game uses when the projectile meets the target.

The Target class holds the position of the target and checks to see whether or not the Target has been hit. It updates accordingly.

The FinalPanel class calls the image classes, it seperates the target image so that you can hit it left, middle, and right (rather than just hit it once and be done with it). It also creates a timer object, so that the user is timed to see how long it takes them to finish the game. It checks and updates what the current mouse actions are. And it checks and updates the current action being performed in the game. It checks to see if the user has won, and updates everything in the game accordingly.

The Init class calls FinalPanel, and runs the game.


